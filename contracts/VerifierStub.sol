// A simple verifier stub that accepts any proof (for local testing/dev only).
// IMPORTANT: Replace this stub with the actual verifier generated by snarkjs
// (the file produced by `snarkjs zkey export solidityverifier ...` or the PLONK verifier output)

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

import "./IVerifier.sol";

contract VerifierStub is IVerifier {
    address public admin;
    bool public enabled = true;

    event VerifyCalled(address caller, bool enabled);

    constructor() {
        admin = msg.sender;
    }

    modifier onlyAdmin() {
        require(msg.sender == admin, "VerifierStub: only admin");
        _;
    }

    function setEnabled(bool _enabled) external onlyAdmin {
        enabled = _enabled;
    }

    /// @notice For development: always return `enabled` as verification result.
    function verify(
        bytes calldata /*proof*/,
        uint256[] calldata /*pubSignals*/
    ) external view override returns (bool valid) {
        // In production replace with real verifier logic.
        return enabled;
    }
}
