{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_verifier",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_requireProof",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "oldValue",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "newValue",
						"type": "bool"
					}
				],
				"name": "RequireProofUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldVerifier",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newVerifier",
						"type": "address"
					}
				],
				"name": "VerifierUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "root",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "batchHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "submitter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "blockNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "VoteAnchored",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "proof",
						"type": "bytes"
					},
					{
						"internalType": "uint256[]",
						"name": "pubSignals",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes32",
						"name": "root",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "batchHash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					}
				],
				"name": "anchorVoteBatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "batches",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "root",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "batchHash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "submitter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "blockNumber",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "batchHash",
						"type": "bytes32"
					}
				],
				"name": "getBatch",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "root",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "batchHash",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "metadata",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "submitter",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							}
						],
						"internalType": "struct NoDoAnchor.Batch",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "requireProof",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_require",
						"type": "bool"
					}
				],
				"name": "setRequireProof",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_verifier",
						"type": "address"
					}
				],
				"name": "setVerifier",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "verifier",
				"outputs": [
					{
						"internalType": "contract IVerifier",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"anchorVoteBatch(bytes,uint256[],bytes32,bytes32,string)": {
					"params": {
						"batchHash": "Off-chain batch hash (e.g., IPFS CID hashed to bytes32) to reference stored proofs and data.",
						"metadata": "Optional short metadata or pointer (e.g., IPFS CID in string form).",
						"proof": "Serialized proof bytes (if requireProof == true). If not required, can be empty.",
						"pubSignals": "Public signals expected by verifier (as uint256[]). If not required, can be empty array.",
						"root": "The Merkle root or aggregated root representing the batch."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"anchorVoteBatch(bytes,uint256[],bytes32,bytes32,string)": {
					"notice": "Anchor a vote batch on-chain. Optionally verifies a zk-proof before accepting."
				},
				"getBatch(bytes32)": {
					"notice": "Helper to fetch batch information"
				},
				"setRequireProof(bool)": {
					"notice": "Toggle whether proofs are required to anchor batches."
				},
				"setVerifier(address)": {
					"notice": "Update the verifier contract address (admin only)."
				},
				"transferOwnership(address)": {
					"notice": "Transfer ownership"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/NoDoAnchor.sol": "NoDoAnchor"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/IVerifier.sol": {
			"keccak256": "0x5e795ee3430f40e5a4ad68630c0335eac1bca8cb9d505322c7dacdd3aa5acc89",
			"license": "MIT",
			"urls": [
				"bzz-raw://1168e5cc06001dad34435dd361d96b3392d71b53322561c7ab9ae702739dbc01",
				"dweb:/ipfs/QmTfRn2ZUxy8dUyZNhAM6WkKFEML2ANfUABBK3oavJvs2Y"
			]
		},
		"contracts/NoDoAnchor.sol": {
			"keccak256": "0xfd1a7ec8acff8ffad22b9abdbbaad54812fedbf97472338f736b29af6dfcb41a",
			"license": "MIT",
			"urls": [
				"bzz-raw://2e800bf58310d206e66d3d0bc1626b99469f4246da305f9953d7223c9852ba14",
				"dweb:/ipfs/QmRcdm47tWe2HqdS38nPhQ6RqhxzPh24cekzt6i2S8GY38"
			]
		}
	},
	"version": 1
}