{
	"id": "d340717a7b4de5f26eaaa1f604ff78cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/IVerifier.sol": {
				"content": "// Interface for a generic on-chain verifier (PLONK/other)\n// The concrete verifier generated by snarkjs should implement this interface.\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IVerifier {\n    /// @notice Verify a proof on-chain\n    /// @param proof Serialized proof bytes as produced by the prover/verifier library\n    /// @param pubSignals Public signals (as uint256 array) that the verifier expects\n    /// @return valid True if the proof verifies\n    function verify(\n        bytes calldata proof,\n        uint256[] calldata pubSignals\n    ) external view returns (bool valid);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/IVerifier.sol": {
				"IVerifier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "proof",
									"type": "bytes"
								},
								{
									"internalType": "uint256[]",
									"name": "pubSignals",
									"type": "uint256[]"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"verify(bytes,uint256[])": {
								"params": {
									"proof": "Serialized proof bytes as produced by the prover/verifier library",
									"pubSignals": "Public signals (as uint256 array) that the verifier expects"
								},
								"returns": {
									"valid": "True if the proof verifies"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verify(bytes,uint256[])": "9649daae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"pubSignals\",\"type\":\"uint256[]\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"verify(bytes,uint256[])\":{\"params\":{\"proof\":\"Serialized proof bytes as produced by the prover/verifier library\",\"pubSignals\":\"Public signals (as uint256 array) that the verifier expects\"},\"returns\":{\"valid\":\"True if the proof verifies\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verify(bytes,uint256[])\":{\"notice\":\"Verify a proof on-chain\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVerifier.sol\":\"IVerifier\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IVerifier.sol\":{\"keccak256\":\"0x5e795ee3430f40e5a4ad68630c0335eac1bca8cb9d505322c7dacdd3aa5acc89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1168e5cc06001dad34435dd361d96b3392d71b53322561c7ab9ae702739dbc01\",\"dweb:/ipfs/QmTfRn2ZUxy8dUyZNhAM6WkKFEML2ANfUABBK3oavJvs2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"verify(bytes,uint256[])": {
								"notice": "Verify a proof on-chain"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IVerifier.sol": {
				"ast": {
					"absolutePath": "contracts/IVerifier.sol",
					"exportedSymbols": {
						"IVerifier": [
							13
						]
					},
					"id": 14,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "171:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVerifier",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IVerifier",
							"nameLocation": "207:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "223:257:0",
										"text": "@notice Verify a proof on-chain\n @param proof Serialized proof bytes as produced by the prover/verifier library\n @param pubSignals Public signals (as uint256 array) that the verifier expects\n @return valid True if the proof verifies"
									},
									"functionSelector": "9649daae",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "494:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "525:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "510:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "510:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "pubSignals",
												"nameLocation": "559:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "540:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 5,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 6,
													"nodeType": "ArrayTypeName",
													"src": "540:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:75:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "604:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "599:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "599:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:12:0"
									},
									"scope": 13,
									"src": "485:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "197:416:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "171:443:0"
				},
				"id": 0
			}
		}
	}
}